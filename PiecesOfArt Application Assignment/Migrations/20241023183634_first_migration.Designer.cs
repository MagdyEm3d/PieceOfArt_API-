// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PiecesOfArt_Application_Assignment.ConnectionDbContext;

#nullable disable

namespace PiecesOfArt_Application_Assignment.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241023183634_first_migration")]
    partial class first_migration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PiecesOfArt_Application_Assignment.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryDescription = "A 19th-century art movement characterized by small, thin brush strokes and emphasis on light and movement.",
                            CategoryName = "Impressionism"
                        });
                });

            modelBuilder.Entity("PiecesOfArt_Application_Assignment.Models.LoyaltyCard", b =>
                {
                    b.Property<int>("LoyaltyCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoyaltyCardId"));

                    b.Property<string>("LoyaltyCardDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoyaltyCardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoyaltyCardId");

                    b.ToTable("loyaltyCards");

                    b.HasData(
                        new
                        {
                            LoyaltyCardId = 1,
                            LoyaltyCardDescription = "10%",
                            LoyaltyCardName = "Bronze"
                        });
                });

            modelBuilder.Entity("PiecesOfArt_Application_Assignment.Models.PieceOfArt", b =>
                {
                    b.Property<int>("PieceOfArtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PieceOfArtId"));

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("categoryid")
                        .HasColumnType("int");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("PieceOfArtId");

                    b.HasIndex("categoryid");

                    b.HasIndex("userid");

                    b.ToTable("pieceOfArts");

                    b.HasData(
                        new
                        {
                            PieceOfArtId = 1,
                            Price = 100.0,
                            PublicationDate = new DateTime(2024, 10, 23, 21, 36, 33, 463, DateTimeKind.Local).AddTicks(9932),
                            Title = "Starry Night",
                            categoryid = 1,
                            userid = 1
                        });
                });

            modelBuilder.Entity("PiecesOfArt_Application_Assignment.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<int>("LoyaltyCardId")
                        .HasColumnType("int");

                    b.Property<int>("UserAge")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("LoyaltyCardId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            LoyaltyCardId = 1,
                            UserAge = 17,
                            UserEmail = "Magdy@gmail.com",
                            UserName = "Magdy"
                        });
                });

            modelBuilder.Entity("PiecesOfArt_Application_Assignment.Models.PieceOfArt", b =>
                {
                    b.HasOne("PiecesOfArt_Application_Assignment.Models.Category", "category")
                        .WithMany("pieceOfArts")
                        .HasForeignKey("categoryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PiecesOfArt_Application_Assignment.Models.User", "User")
                        .WithMany("pieceOfArts")
                        .HasForeignKey("userid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("category");
                });

            modelBuilder.Entity("PiecesOfArt_Application_Assignment.Models.User", b =>
                {
                    b.HasOne("PiecesOfArt_Application_Assignment.Models.LoyaltyCard", "LoyaltyCard")
                        .WithMany("users")
                        .HasForeignKey("LoyaltyCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoyaltyCard");
                });

            modelBuilder.Entity("PiecesOfArt_Application_Assignment.Models.Category", b =>
                {
                    b.Navigation("pieceOfArts");
                });

            modelBuilder.Entity("PiecesOfArt_Application_Assignment.Models.LoyaltyCard", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("PiecesOfArt_Application_Assignment.Models.User", b =>
                {
                    b.Navigation("pieceOfArts");
                });
#pragma warning restore 612, 618
        }
    }
}
